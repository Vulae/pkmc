/// Code inside generated.rs & data inside generated.json is automatically generated by pkmc-generated
pub mod generated;

use serde::Deserialize;
use std::{collections::HashMap, sync::LazyLock};

pub use generated::*;

#[macro_export]
macro_rules! generated_util_create_basic_enum {
    ($vis:vis $name:ident; $($sub_name:ident),+) => {
        #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
        $vis enum $name {
            $(
                $sub_name,
            )+
        }
    };
}

#[derive(Debug, Deserialize)]
pub struct DataBlockState {
    #[serde(default)]
    pub default: bool,
    pub id: i32,
    #[serde(default)]
    pub properties: HashMap<String, String>,
}

#[derive(Debug, Deserialize)]
pub struct DataBlock {
    pub definition: HashMap<String, serde_json::Value>,
    #[serde(default)]
    pub properties: HashMap<String, Vec<String>>,
    pub states: Vec<DataBlockState>,
}

#[derive(Debug, Deserialize)]
pub struct Data {
    pub block: HashMap<String, DataBlock>,
}

impl Data {
    pub fn load() -> Result<Self, std::io::Error> {
        Ok(serde_json::from_str(include_str!("./generated.json"))?)
    }
}

pub static DATA: LazyLock<Data> = LazyLock::new(|| Data::load().unwrap());
