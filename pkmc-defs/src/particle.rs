use pkmc_generated::registry::ParticleType;
use pkmc_util::{Color, Position, Vec3};

use crate::block::Block;

#[derive(Debug)]
pub enum Particle {
    AngryVillager,
    Block(Block),
    BlockMarker(Block),
    Bubble,
    Cloud,
    Crit,
    DamageIndicator,
    DragonBreath,
    DrippingLava,
    FallingLava,
    LandingLava,
    DrippingWater,
    FallingWater,
    Dust {
        color: Color,
        scale: f32,
    },
    DustColorTransition {
        from: Color,
        to: Color,
        scale: f32,
    },
    Effect,
    ElderGuardian,
    Enchant,
    EndRod,
    EntityEffect {
        color: Color,
        alpha: u8,
    },
    ExplosionEmitter,
    Explosion,
    Gust,
    SmallGust,
    GustEmitterLarge,
    GustEmitterSmall,
    SonicBoom,
    FallingDust(Block),
    Firework,
    Fishing,
    Flame,
    Infested,
    CherryLeaves,
    PaleOakLeaves,
    SculkSoul,
    SculkCharge {
        roll: f32,
    },
    SculkChargePop,
    SoulFireFlame,
    Soul,
    Flash,
    HappyVillager,
    Composter,
    Heart,
    InstantEffect,
    // TODO: Implement slot data
    // https://minecraft.wiki/w/Minecraft_Wiki:Projects/wiki.vg_merge/Slot_Data
    Item,
    Vibration {
        source: VibrationSource,
        ticks: i32,
    },
    Trail {
        position: Vec3<f64>,
        color: Color,
        duration: i32,
    },
    ItemSlime,
    ItemCobweb,
    ItemSnowball,
    LargeSmoke,
    Lava,
    Mycelium,
    Note,
    Poof,
    Portal,
    Rain,
    Smoke,
    WhiteSmoke,
    Sneeze,
    Spit,
    SquidInk,
    SweepAttack,
    TotemOfUndying,
    Underwater,
    Splash,
    Witch,
    BubblePop,
    CurrentDown,
    BubbleColumnUp,
    Nautilus,
    Dolphin,
    CampfireCosySmoke,
    CampfireSignalSmoke,
    DrippingHoney,
    FallingHoney,
    LandingHoney,
    FallingNectar,
    FallingSporeBlossom,
    Ash,
    CrimsonSpore,
    WarpedSpore,
    SporeBlossomAir,
    DrippingObsidianTear,
    FallingObsidianTear,
    LandingObsidianTear,
    ReversePortal,
    WhiteAsh,
    SmallFlame,
    Snowflake,
    DrippingDripstoneLava,
    FallingDripstoneLava,
    DrippingDripstoneWater,
    FallingDripstoneWater,
    GlowSquidInk,
    Glow,
    WaxOn,
    WaxOff,
    ElectricSpark,
    Scrape,
    Shriek {
        delay: i32,
    },
    EggCrack,
    DustPlume,
    TrialSpawnerDetection,
    TrialSpawnerDetectionOminous,
    VaultConnection,
    DustPillar(Block),
    OminousSpawning,
    RaidOmen,
    TrialOmen,
    BlockCrumble(Block),
}

#[derive(Debug)]
pub enum VibrationSource {
    Block(Position),
    Entity { id: i32, eye_height: f32 },
}

impl Particle {
    pub(crate) fn r#type(&self) -> ParticleType {
        match self {
            Particle::AngryVillager => ParticleType::AngryVillager,
            Particle::Block(..) => ParticleType::Block,
            Particle::BlockMarker(..) => ParticleType::BlockMarker,
            Particle::Bubble => ParticleType::Bubble,
            Particle::Cloud => ParticleType::Cloud,
            Particle::Crit => ParticleType::Crit,
            Particle::DamageIndicator => ParticleType::DamageIndicator,
            Particle::DragonBreath => ParticleType::DragonBreath,
            Particle::DrippingLava => ParticleType::DrippingLava,
            Particle::FallingLava => ParticleType::FallingLava,
            Particle::LandingLava => ParticleType::LandingLava,
            Particle::DrippingWater => ParticleType::DrippingWater,
            Particle::FallingWater => ParticleType::FallingWater,
            Particle::Dust { .. } => ParticleType::Dust,
            Particle::DustColorTransition { .. } => ParticleType::DustColorTransition,
            Particle::Effect => ParticleType::Effect,
            Particle::ElderGuardian => ParticleType::ElderGuardian,
            Particle::Enchant => ParticleType::Enchant,
            Particle::EndRod => ParticleType::EndRod,
            Particle::EntityEffect { .. } => ParticleType::EntityEffect,
            Particle::ExplosionEmitter => ParticleType::ExplosionEmitter,
            Particle::Explosion => ParticleType::Explosion,
            Particle::Gust => ParticleType::Gust,
            Particle::SmallGust => ParticleType::SmallGust,
            Particle::GustEmitterLarge => ParticleType::GustEmitterLarge,
            Particle::GustEmitterSmall => ParticleType::GustEmitterSmall,
            Particle::SonicBoom => ParticleType::SonicBoom,
            Particle::FallingDust(..) => ParticleType::FallingDust,
            Particle::Firework => ParticleType::Firework,
            Particle::Fishing => ParticleType::Fishing,
            Particle::Flame => ParticleType::Flame,
            Particle::Infested => ParticleType::Infested,
            Particle::CherryLeaves => ParticleType::CherryLeaves,
            Particle::PaleOakLeaves => ParticleType::PaleOakLeaves,
            Particle::SculkSoul => ParticleType::SculkSoul,
            Particle::SculkCharge { .. } => ParticleType::SculkCharge,
            Particle::SculkChargePop => ParticleType::SculkChargePop,
            Particle::SoulFireFlame => ParticleType::SoulFireFlame,
            Particle::Soul => ParticleType::Soul,
            Particle::Flash => ParticleType::Flash,
            Particle::HappyVillager => ParticleType::HappyVillager,
            Particle::Composter => ParticleType::Composter,
            Particle::Heart => ParticleType::Heart,
            Particle::InstantEffect => ParticleType::InstantEffect,
            Particle::Item => ParticleType::Item,
            Particle::Vibration { .. } => ParticleType::Vibration,
            Particle::Trail { .. } => ParticleType::Trail,
            Particle::ItemSlime => ParticleType::ItemSlime,
            Particle::ItemCobweb => ParticleType::ItemCobweb,
            Particle::ItemSnowball => ParticleType::ItemSnowball,
            Particle::LargeSmoke => ParticleType::LargeSmoke,
            Particle::Lava => ParticleType::Lava,
            Particle::Mycelium => ParticleType::Mycelium,
            Particle::Note => ParticleType::Note,
            Particle::Poof => ParticleType::Poof,
            Particle::Portal => ParticleType::Portal,
            Particle::Rain => ParticleType::Rain,
            Particle::Smoke => ParticleType::Smoke,
            Particle::WhiteSmoke => ParticleType::WhiteSmoke,
            Particle::Sneeze => ParticleType::Sneeze,
            Particle::Spit => ParticleType::Spit,
            Particle::SquidInk => ParticleType::SquidInk,
            Particle::SweepAttack => ParticleType::SweepAttack,
            Particle::TotemOfUndying => ParticleType::TotemOfUndying,
            Particle::Underwater => ParticleType::Underwater,
            Particle::Splash => ParticleType::Splash,
            Particle::Witch => ParticleType::Witch,
            Particle::BubblePop => ParticleType::BubblePop,
            Particle::CurrentDown => ParticleType::CurrentDown,
            Particle::BubbleColumnUp => ParticleType::BubbleColumnUp,
            Particle::Nautilus => ParticleType::Nautilus,
            Particle::Dolphin => ParticleType::Dolphin,
            Particle::CampfireCosySmoke => ParticleType::CampfireCosySmoke,
            Particle::CampfireSignalSmoke => ParticleType::CampfireSignalSmoke,
            Particle::DrippingHoney => ParticleType::DrippingHoney,
            Particle::FallingHoney => ParticleType::FallingHoney,
            Particle::LandingHoney => ParticleType::LandingHoney,
            Particle::FallingNectar => ParticleType::FallingNectar,
            Particle::FallingSporeBlossom => ParticleType::FallingSporeBlossom,
            Particle::Ash => ParticleType::Ash,
            Particle::CrimsonSpore => ParticleType::CrimsonSpore,
            Particle::WarpedSpore => ParticleType::WarpedSpore,
            Particle::SporeBlossomAir => ParticleType::SporeBlossomAir,
            Particle::DrippingObsidianTear => ParticleType::DrippingObsidianTear,
            Particle::FallingObsidianTear => ParticleType::FallingObsidianTear,
            Particle::LandingObsidianTear => ParticleType::LandingObsidianTear,
            Particle::ReversePortal => ParticleType::ReversePortal,
            Particle::WhiteAsh => ParticleType::WhiteAsh,
            Particle::SmallFlame => ParticleType::SmallFlame,
            Particle::Snowflake => ParticleType::Snowflake,
            Particle::DrippingDripstoneLava => ParticleType::DrippingDripstoneLava,
            Particle::FallingDripstoneLava => ParticleType::FallingDripstoneLava,
            Particle::DrippingDripstoneWater => ParticleType::DrippingDripstoneWater,
            Particle::FallingDripstoneWater => ParticleType::FallingDripstoneWater,
            Particle::GlowSquidInk => ParticleType::GlowSquidInk,
            Particle::Glow => ParticleType::Glow,
            Particle::WaxOn => ParticleType::WaxOn,
            Particle::WaxOff => ParticleType::WaxOff,
            Particle::ElectricSpark => ParticleType::ElectricSpark,
            Particle::Scrape => ParticleType::Scrape,
            Particle::Shriek { .. } => ParticleType::Shriek,
            Particle::EggCrack => ParticleType::EggCrack,
            Particle::DustPlume => ParticleType::DustPlume,
            Particle::TrialSpawnerDetection => ParticleType::TrialSpawnerDetection,
            Particle::TrialSpawnerDetectionOminous => ParticleType::TrialSpawnerDetectionOminous,
            Particle::VaultConnection => ParticleType::VaultConnection,
            Particle::DustPillar { .. } => ParticleType::DustPillar,
            Particle::OminousSpawning => ParticleType::OminousSpawning,
            Particle::RaidOmen => ParticleType::RaidOmen,
            Particle::TrialOmen => ParticleType::TrialOmen,
            Particle::BlockCrumble { .. } => ParticleType::BlockCrumble,
        }
    }
}
